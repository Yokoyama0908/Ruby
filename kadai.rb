#Q1. 以下の配列から、期待された結果の配列を作成してください
#[1, 2, 3, 4, 5]
#期待する配列
#[1, 3, 5, 7, 9]

ar_1 = [1, 2, 3, 4, 5]

p ar_1.map{|n| 2 * n -1}

puts "----------------------------------------------------"
#Q2. 以下の配列から、期待された結果の配列を作成してください
#["田中", "佐藤", "佐々木", "高橋"]
#期待する配列
#["田中", "佐藤", "佐々木", "高橋", "斎藤"]

ar_1 = ["田中", "佐藤", "佐々木", "高橋"]

ar_1.push("斎藤")

p ar_1

puts "----------------------------------------------------"

#Q3. 以下の文字列の配列を数字だけの配列に変換してください
#["1", "2", "3", "4", "5"]
#期待する配列
#[1, 2, 3, 4, 5]

ar_1 = ["1", "2", "3", "4", "5"]

ar_2 = ar_1.map{|n| n.to_i}
p ar_2

puts "----------------------------------------------------"

#Q4. 以下の二つの配列を合体させた新しい配列を作成してください
#["dog", "cat", "fish"]
#["bird", "bat", "tiger"]

ar_1 = ["dog", "cat", "fish"]
ar_2 = ["bird", "bat", "tiger"]

p ar_1.push(ar_2).flatten

puts "----------------------------------------------------"

#Q5. 以下の配列の中に3がいくつあるか数えるコードを書いてください
#[1, 5, 8, 10, 2, 3, 2, 3, 3, 1, 4, 5, 9]

ar_1 = [1, 5, 8, 10, 2, 3, 2, 3, 3, 1, 4, 5, 9]

p ar_1.count(3)

puts "----------------------------------------------------"
#Q6. 配列が空であればtrue、1つ以上の要素があればfalseを返すコードを書いてください
ar_1 = []

if ar_1.empty?
    puts "ture"
else
    puts "false"
end

puts "----------------------------------------------------"
#Q7. 配列であればtrue、配列でなければfalseを返すコードを書いてください
ar_1 = []
ar_2 = {}
p ar_1.instance_of?(Array)
p ar_2.instance_of?(Array)

puts "----------------------------------------------------"
#Q8. mapとは異なるメソッドを使って以下と全く同じ処理を実現させてください
#numbers = ["6", "5", "3", "7", "1"]
#p numbers.map {|item| item.to_i }
#-> [6, 5, 3, 7, 1]
numbers = ["6", "5", "3", "7", "1"]
numbers2 = []
numbers.each do |number|
    numbers2 << number.to_i
end
p numbers2

puts "----------------------------------------------------"
#Q9. 以下の配列を用いて、期待通りの出力結果になるようにコードを書いてください
#["田中", "佐藤", "佐々木", "高橋"]
#期待結果
#会員No.1 田中さん
#会員No.2 佐藤さん
#会員No.3 佐々木さん
#会員No.4 高橋さん

members = ["田中", "佐藤", "佐々木", "高橋"]
members.each.with_index(1) do |number, i|
    puts "会員No.#{i} #{number}さん"
end

puts "----------------------------------------------------"
#Q10. 以下の配列の最後に山下を追加してください
#["田中", "佐藤", "佐々木", "高橋"]

ar_1 = ["田中", "佐藤", "佐々木", "高橋"]

ar_1.push("山下")

p ar_1

